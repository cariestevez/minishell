!missing ft_exit();!

EXPORT: segfault
(). export var=test | echo $var
    should display \n, but segfaults
echo: prints an empty line when no arguments

PARSER: count_tokens: when number of cmds < num of redirections ->segfault

PARSING+REDIRECTIONS: if input = "> file", bash creates thefile and return the prompt. minishell segfaults
                        (I need to come up with a solution)

REDIRECTIONS: if valid_cmd > file1 > file2 : doesn't create the 2nd file and redirect the content of file1 to it
                if not_valid_cmd > file1 > file2 : creates the 1st file (sometimes also the 2nd) prints multiple \n and waits for input

EXPANDER: remove quotes //add check to exclude empty str in between quotations?

CD: sets error code to 0 after perror, even though there was an error

CAT:    when running cat without args, prints multiple \n and waits for input
        cat < input > output    : if input file exists, doens't create the output file just prints input file
                             : if input file doesn't exist --> open: Bad file descriptor and waits for input

PIPES: when cmd | not_valid_cmd : infinite loooooooooop
FREEING/EXITING: if execute doesnt find command, frees invalid pointer -->> I solved it commenting out a line in your free_and_exit function

EXECUTION: in some cases, minishell prints a newline before the expected output???

RANDOM: when pressing tab(without enter) it 'executes' ls -a?!

LEXER: with "env" "pwd" "cd ~" and soem other commands, minishell segfaults in the lexer, but it doesnt with fx "export" or "cd /home"??

MEMORY: Something that shouldnt be freed is being freed after returning to main, running a command second time causes problems where no problems occured on the first command
ex.
        commands and anything inside is being freed (solved in my branch but fucked up other things)