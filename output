
!!!RUN WITH: valgrind --suppressions=suppressions.supp --leak-check=full --show-leak-kinds=all ./minishell

BASH BUUUUUUG running  <" " ere for example

when running echo $? code enters in redirections function. should it?

!missing ft_exit();!

EXPORT:
segfault
(). export var=test | echo $var
    should display \n, but segfaults

REDIRECTIONS: if input = "> file" it works with leaks bc it doesn't free redirections
            if not_valid_cmd > file1 > file2 same as above
             LEAKS INSIDE OF THE CHILD? if they're gone when we exit the shell should be fine

CAT: cat < input > output    : if input file doesn't exist add_history leaks (maybe solved when exiting the shell since history is being freed at the very end)

PARSER:  ex. "ls >a>b>c" if redirectons after the first one are not separated by whitespace, they are pased as command args and not redirections

EXPANDER: remove quotes //add check to exclude empty str in between quotations?

when 'command not found' add_history leaks (maybe solved when exiting the shell since history is being freed at the very end)

ex.
        commands and anything inside is being freed (solved in my branch but fucked up other things)
        memory leak when piping with a builtin

BUILTIN: something is wrong when executing with redir or pipes-> shell continues executing inside of the new created file?!
